* {
    padding: 0;
    margin: 0;
    border: 0;
}
body, html {
    height: 100%;
    background: black;
    color: white;
}
body {
    min-width: 760px;
}
.clear { clear: both; }
#mainContainer {
    min-height: 100%;
}
* html #mainContainer {
    height: 100%; /*** IE doesn't support min-height, but instead it handles height as min-height so we need to hack the height ***/
}
/* HEADER */
#header {
    color: gray;
    background: black;
    height: 40px;
    display: table;
}
.header-child { display: table-cell; vertical-align: middle; }

/* CONTENT AND COLUMNS */
.outer {
    padding-left: 260px; /*** Same width as margin-left for the float-wrap div ***/
}
.inner {
    width: 100%;
    padding-bottom: 26px; /*** Padding-bottom value is the same value as the total height of the footer ***/
}
/*** div.inner is wider than its container, div.outer, and so overlaps to the right, pushing
     div.right into the proper position. IE expands div.outer instead, requiring a Tan hack to avoid 
     blowing the layout apart. IE gets the original 100% width as in the Livingstone layout.
     ***/
.float-wrap {
    float: left;
    width: 100%;
    margin-left: -260px; /*** Same length as .outer padding-left but with negative value ***/
}

#content {
    float: right;
    margin-right: -260px; /*** Same length as .outer padding-left but with negative value ***/
    width: 100%;
    position: relative; /*** IE needs this  ***/
}
/* LEFT COLUMN */
/*** div.left is in div.float-wrap, and when div.float-wrap is neg margined to the left, 
     div.left is carried over into the proper position. 
     ***/
#left {
    color: black;
    background: lightgray;
    float: left;
    width: 260px;
    height: 100%;
    position: relative; /*** IE needs this  ***/
}


/* RIGHT COLUMN */
#right {
    float: right; 
    width: 1px;
    position: relative; /*** IE needs this  ***/
}

/* FOOTER */
#footer {
    background: black;
    height: 26px; /*** The drawback with this solution is that the height of the footer can't be flexible. If you add so much content to the footer that it extends 45px, you will get a vertical scrollbar and the content will overflow the footer if you don't set overflow to hidden ***/
    margin-top: -26px; /*** By using a negative margin-top we now moves the footer up the same amount as the footer height to avoid vertical scrolling. Remember, if you use borders and padding on your footer you will have to calculate this in your negative margin-top value also. ***/
    text-align: center;
}
#footerLeft {
    background: black;
    float: left;
    height: 26px;
    width: 260px; /*** Same length as .outer padding-left ***/
}
#footer p {
    clear: both;
}
